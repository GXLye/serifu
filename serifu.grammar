@precedence {Note}

@top Script { (Page | Spread)+ }

Spread {
	SpreadToken newline Panel*
}

Page {
	PageToken newline Panel*
}

Panel {
	PanelToken newline Line*
}

Line {
	space? (Sfx | Text | Note) newline
}

Sfx {
	sfxToken SfxTranslation ( sfxOpenToken SfxSource sfxCloseToken )?
}

SfxTranslation {
	linetext
}

SfxSource {
	linetext
}

Text {
	(Source ("/" Style)? space? ":" space? Content)
}

Source {
	word+
}

Style {
	word+
}

Content {
	 BlockText | ((linetext | Ital | Bold | BoldItal )+ newline)
}

Note {
	noteToken linetext
}

Ital {
	italToken linetext italToken
}

Bold {
	boldToken linetext boldToken
}

BoldItal {
	boldItalToken linetext boldItalToken
}

BlockText {
	blockTextToken (notspace | space)+ blockTextToken 
}

@skip {
	
}

@tokens {
	space { (" " | "\t")+ }
	notspace { ![*_\t ] }
	newline { "\n" }
	PageToken { "#" ![\n]*}
	SpreadToken { "##" ![\n]*}
	PanelToken { "-" ![\n]*}
	linetext { ![\n*_]+ }
	wordChar { std.asciiLetter | $[_$\u{a1}-\u{10ffff}] | std.digit | "-" | "'" | " "}
	word { (std.asciiLetter | $[_$\u{a1}-\u{10ffff}] | std.digit) wordChar* }
	italToken { "_" }
	boldToken { "*" }
	boldItalToken { "**" }
	noteToken { "!" }
	sfxToken { "*" }	
	sfxOpenToken { "(" }
	sfxCloseToken { ")" }
	blockTextToken { "\n===\n" (space | notspace) "\n===\n"}
  @precedence {SpreadToken, PageToken, blockTextToken, italToken, boldToken, boldItalToken, linetext, space}	
}